// This content was automatically generated by TypeEdge Emulator. Do not edit directly.

{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": ""
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "microsoft/azureiotedge-agent:1.0",
              "createOptions": ""
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "microsoft/azureiotedge-hub:1.0",
              "createOptions": "{\n  \"HostConfig\": {\n    \"PortBindings\": {\n      \"8883/tcp\": [\n        {\n          \"HostPort\": \"8883\"\n        }\n      ],\n      \"443/tcp\": [\n        {\n          \"HostPort\": \"443\"\n        }\n      ]\n    }\n  }\n}"
            }
          }
        },
        "modules": {
          "temperaturesensor": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "on-failure",
            "settings": {
              "image": "typeedge.azurecr.io/temperaturesensor",
              "createOptions": "{\n  \"Env\":[\n     \"moduleName=temperaturesensor\"\n  ]\n  }"
            }
          },
          "orchestrator": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "on-failure",
            "settings": {
              "image": "typeedge.azurecr.io/orchestrator",
              "createOptions": "{\n  \"Env\":[\n     \"moduleName=orchestrator\"\n  ]\n  }"
            }
          },
          "datasampling": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "on-failure",
            "settings": {
              "image": "typeedge.azurecr.io/datasampling",
              "createOptions": "{\n  \"Env\":[\n     \"moduleName=datasampling\"\n  ]\n , \"Volumes\": { \"/env/samples\": {} } }"
            }
          },
          "anomalydetection": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "on-failure",
            "settings": {
              "image": "typeedge.azurecr.io/anomalydetection",
              "createOptions": "{\n  \"Env\":[\n     \"moduleName=anomalydetection\"\n  ]\n , \"Volumes\": { \"/env/samples\": {} } }"
            }
          },
          "visualization": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "on-failure",
            "settings": {
              "image": "typeedge.azurecr.io/visualization",
              "createOptions": "{\n  \"Env\":[\n     \"moduleName=visualization\"\n  ]\n  }"
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "route0": "FROM /messages/modules/temperaturesensor/outputs/Temperature INTO BrokeredEndpoint(\"/modules/orchestrator/inputs/Temperature\")",
          "route1": "FROM /messages/modules/orchestrator/outputs/Training INTO BrokeredEndpoint(\"/modules/datasampling/inputs/Training\")",
          "route2": "FROM /messages/modules/orchestrator/outputs/Detection INTO BrokeredEndpoint(\"/modules/anomalydetection/inputs/Detection\")",
          "route3": "FROM /messages/modules/datasampling/outputs/Samples INTO BrokeredEndpoint(\"/modules/anomalydetection/inputs/Samples\")",
          "route4": "FROM /messages/modules/orchestrator/outputs/Visualization INTO BrokeredEndpoint(\"/modules/visualization/inputs/Visualization\")",
          "route5": "FROM /messages/modules/anomalydetection/outputs/Anomaly INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 20
        }
      }
    }
  },
  "deviceContent": null
}